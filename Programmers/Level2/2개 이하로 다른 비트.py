def solution(numbers):
    answer=[]
    for i in numbers:
        if i%4==3:
            flag='0'+bin(i)[2:]
            print(flag)
            for i in range(len(flag)-1,-1,-1):
                if flag[i]=='0':
                    answer.append(int(flag[:i]+'10'+flag[i+2:],2))
                    break
        else:
            answer.append(i+1)
    return answer
# print(solution([2,7]))
print(solution([343]))
# input => 1001, 337, 0, 1, 333, 673, 343, 221, 898, 997, 121, 1015, 665, 779, 891, 421, 222, 256, 512, 128, 100
# 1111101001, 101010001, 0, 1, 101001101, 1010100001, 101010111...
# output => 1002, 338, 1, 2, 334, 674, 347, 222, 899, 998, 122, 1019, 666, 781, 893, 422, 223, 257, 513, 129, 101
# 4로 나눈 나머지가 3인경우 마지막부터 3개의 비트가 111
# 이 경우만 맨 앞비트에 0을 추가 ex) 10111 => 010111
# 이후 비트 자리수를 마지막부터 체크하면서 비트값이 0인 경우 해당 자리의 앞자리까지 슬라이싱
# 슬라이싱 된 자리수뒤로 '10'을 붙이고 '10'의 길이 2만큼 더한 인덱스부터 슬라이싱한 값을 추가
# ex) 10111 => '1'+'10'+'11' => 11011